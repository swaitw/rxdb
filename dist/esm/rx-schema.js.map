{"version":3,"file":"rx-schema.js","names":["overwriteGetterForCaching","isMaybeReadonlyArray","deepEqual","newRxError","runPluginHooks","fillWithDefaultSettings","getComposedPrimaryKeyOfDocumentData","getFinalFields","getPrimaryFieldOfPrimaryKey","getSchemaByObjectPath","normalizeRxJsonSchema","overwritable","RxSchema","jsonSchema","hashFunction","indexes","getIndexes","primaryPath","primaryKey","properties","maxLength","schema","finalFields","_proto","prototype","validateChange","dataBefore","dataAfter","forEach","fieldName","getDocumentPrototype","proto","pathProperties","Object","keys","key","fullPath","__defineGetter__","get","undefined","ret","defineProperty","get$","enumerable","configurable","get$$","populate","getPrimaryOfDocumentData","documentData","_createClass","version","values","entries","filter","v","hasOwnProperty","call","k","default","JSON","stringify","map","index","getPreviousVersions","c","Array","fill","createRxSchema","runPreCreateHooks","useJsonSchema","deepFreezeWhenDevMode","isRxSchema","obj","toTypedRxJsonSchema"],"sources":["../../src/rx-schema.ts"],"sourcesContent":["import {\n    overwriteGetterForCaching,\n    isMaybeReadonlyArray,\n    deepEqual\n} from './plugins/utils/index.ts';\nimport {\n    newRxError,\n} from './rx-error.ts';\nimport {\n    runPluginHooks\n} from './hooks.ts';\n\nimport type {\n    DeepMutable,\n    DeepReadonly,\n    HashFunction,\n    MaybeReadonly,\n    RxDocument,\n    RxDocumentData,\n    RxJsonSchema,\n    StringKeys\n} from './types/index.d.ts';\nimport {\n    fillWithDefaultSettings,\n    getComposedPrimaryKeyOfDocumentData,\n    getFinalFields,\n    getPrimaryFieldOfPrimaryKey,\n    getSchemaByObjectPath,\n    normalizeRxJsonSchema\n} from './rx-schema-helper.ts';\nimport { overwritable } from './overwritable.ts';\n\nexport class RxSchema<RxDocType = any> {\n    public indexes: MaybeReadonly<string[]>[];\n    public readonly primaryPath: StringKeys<RxDocumentData<RxDocType>>;\n    public finalFields: string[];\n\n    constructor(\n        public readonly jsonSchema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        public readonly hashFunction: HashFunction\n    ) {\n        this.indexes = getIndexes(this.jsonSchema);\n\n        // primary is always required\n        this.primaryPath = getPrimaryFieldOfPrimaryKey(this.jsonSchema.primaryKey);\n\n        /**\n         * Many people accidentally put in wrong schema state\n         * without the dev-mode plugin, so we need this check here\n         * even in non-dev-mode.\n         */\n        if (!jsonSchema.properties[this.primaryPath].maxLength) {\n            throw newRxError('SC39', { schema: jsonSchema });\n        }\n\n        this.finalFields = getFinalFields(this.jsonSchema);\n    }\n\n    public get version(): number {\n        return this.jsonSchema.version;\n    }\n\n    public get defaultValues(): { [P in keyof RxDocType]: RxDocType[P] } {\n        const values = {} as { [P in keyof RxDocType]: RxDocType[P] };\n        Object\n            .entries(this.jsonSchema.properties)\n            .filter(([, v]) => Object.prototype.hasOwnProperty.call(v, 'default'))\n            .forEach(([k, v]) => (values as any)[k] = (v as any).default);\n        return overwriteGetterForCaching(\n            this,\n            'defaultValues',\n            values\n        );\n    }\n\n    /**\n     * @overrides itself on the first call\n     */\n    public get hash(): Promise<string> {\n        return overwriteGetterForCaching(\n            this,\n            'hash',\n            this.hashFunction(JSON.stringify(this.jsonSchema))\n        );\n    }\n\n    /**\n     * checks if a given change on a document is allowed\n     * Ensures that:\n     * - final fields are not modified\n     * @throws {Error} if not valid\n     */\n    validateChange(dataBefore: any, dataAfter: any): void {\n        this.finalFields.forEach(fieldName => {\n            if (!deepEqual(dataBefore[fieldName], dataAfter[fieldName])) {\n                throw newRxError('DOC9', {\n                    dataBefore,\n                    dataAfter,\n                    fieldName,\n                    schema: this.jsonSchema\n                });\n            }\n        });\n    }\n\n    /**\n     * creates the schema-based document-prototype,\n     * see RxCollection.getDocumentPrototype()\n     */\n    public getDocumentPrototype(): any {\n        const proto: any = {};\n\n        /**\n         * On the top level, we know all keys\n         * and therefore do not have to create a new Proxy object\n         * for each document. Instead we define the getter in the prototype once.\n         */\n        const pathProperties = getSchemaByObjectPath(\n            this.jsonSchema,\n            ''\n        );\n        Object.keys(pathProperties)\n            .forEach(key => {\n                const fullPath = key;\n\n                // getter - value\n                proto.__defineGetter__(\n                    key,\n                    function (this: RxDocument) {\n                        if (!this.get || typeof this.get !== 'function') {\n                            /**\n                             * When an object gets added to the state of a vuejs-component,\n                             * it happens that this getter is called with another scope.\n                             * To prevent errors, we have to return undefined in this case\n                             */\n                            return undefined;\n                        }\n                        const ret = this.get(fullPath);\n                        return ret;\n                    }\n                );\n                // getter - observable$\n                Object.defineProperty(proto, key + '$', {\n                    get: function () {\n                        return this.get$(fullPath);\n                    },\n                    enumerable: false,\n                    configurable: false\n                });\n                // getter - reactivity$$\n                Object.defineProperty(proto, key + '$$', {\n                    get: function () {\n                        return this.get$$(fullPath);\n                    },\n                    enumerable: false,\n                    configurable: false\n                });\n                // getter - populate_\n                Object.defineProperty(proto, key + '_', {\n                    get: function () {\n                        return this.populate(fullPath);\n                    },\n                    enumerable: false,\n                    configurable: false\n                });\n            });\n\n        overwriteGetterForCaching(\n            this,\n            'getDocumentPrototype',\n            () => proto\n        );\n        return proto;\n    }\n\n\n    getPrimaryOfDocumentData(\n        documentData: Partial<RxDocType>\n    ): string {\n        return getComposedPrimaryKeyOfDocumentData(\n            this.jsonSchema,\n            documentData\n        );\n    }\n}\n\nexport function getIndexes<RxDocType = any>(\n    jsonSchema: RxJsonSchema<RxDocType>\n): MaybeReadonly<string[]>[] {\n    return (jsonSchema.indexes || []).map(index => isMaybeReadonlyArray(index) ? index : [index]);\n}\n\n/**\n * array with previous version-numbers\n */\nexport function getPreviousVersions(schema: RxJsonSchema<any>): number[] {\n    const version = schema.version ? schema.version : 0;\n    let c = 0;\n    return new Array(version)\n        .fill(0)\n        .map(() => c++);\n}\n\nexport function createRxSchema<T>(\n    jsonSchema: RxJsonSchema<T>,\n    hashFunction: HashFunction,\n    runPreCreateHooks = true\n): RxSchema<T> {\n    if (runPreCreateHooks) {\n        runPluginHooks('preCreateRxSchema', jsonSchema);\n    }\n\n    let useJsonSchema = fillWithDefaultSettings(jsonSchema);\n    useJsonSchema = normalizeRxJsonSchema(useJsonSchema);\n    overwritable.deepFreezeWhenDevMode(useJsonSchema);\n\n    const schema = new RxSchema(useJsonSchema, hashFunction);\n    runPluginHooks('createRxSchema', schema);\n    return schema;\n}\n\nexport function isRxSchema(obj: any): boolean {\n    return obj instanceof RxSchema;\n}\n\n/**\n * Used as helper function the generate the document type out of the schema via typescript.\n * @link https://github.com/pubkey/rxdb/discussions/3467\n */\nexport function toTypedRxJsonSchema<T extends DeepReadonly<RxJsonSchema<any>>>(schema: T): DeepMutable<T> {\n    return schema as any;\n}\n"],"mappings":"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","ignoreList":[]}